// <auto-generated />
using System;
using Kargo_İlan.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kargo_İlan.Migrations
{
    [DbContext(typeof(KargoDbContext))]
    [Migration("20250419221204_MakeResetTokenNullable")]
    partial class MakeResetTokenNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kargo_İlan.Models.CargoType", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CargoId"));

                    b.Property<string>("CargoName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("KargoAdi")
                        .HasComment("Kargo tipinin adını belirtir");

                    b.HasKey("CargoId")
                        .HasName("PK_KargoTipleri");

                    b.ToTable("CargoTypes");

                    b.HasData(
                        new
                        {
                            CargoId = 10,
                            CargoName = "Palet"
                        },
                        new
                        {
                            CargoId = 20,
                            CargoName = "Çuval"
                        },
                        new
                        {
                            CargoId = 30,
                            CargoName = "Koli"
                        },
                        new
                        {
                            CargoId = 40,
                            CargoName = "Varil"
                        },
                        new
                        {
                            CargoId = 50,
                            CargoName = "Bidon"
                        },
                        new
                        {
                            CargoId = 60,
                            CargoName = "Sıvı Tankı"
                        },
                        new
                        {
                            CargoId = 70,
                            CargoName = "Cam Şişe"
                        },
                        new
                        {
                            CargoId = 80,
                            CargoName = "Diğer"
                        });
                });

            modelBuilder.Entity("Kargo_İlan.Models.CategoryType", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("KategoriAdi")
                        .HasComment("Kategori adını belirtir");

                    b.HasKey("CategoryId")
                        .HasName("PK_Kategoriler");

                    b.ToTable("CategoryTypes");

                    b.HasData(
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "Kırılabilir Ürün"
                        },
                        new
                        {
                            CategoryId = 20,
                            CategoryName = "Yanıcı Madde"
                        },
                        new
                        {
                            CategoryId = 30,
                            CategoryName = "Soğuk Zincir"
                        },
                        new
                        {
                            CategoryId = 40,
                            CategoryName = "Kimyasal Madde"
                        },
                        new
                        {
                            CategoryId = 50,
                            CategoryName = "Gıda"
                        },
                        new
                        {
                            CategoryId = 70,
                            CategoryName = "Elektronik Eşya"
                        },
                        new
                        {
                            CategoryId = 80,
                            CategoryName = "Mobilya"
                        },
                        new
                        {
                            CategoryId = 90,
                            CategoryName = "Diğer"
                        });
                });

            modelBuilder.Entity("Kargo_İlan.Models.CommonUser", b =>
                {
                    b.Property<int>("CommonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommonId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaxNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CommonId")
                        .HasName("PK_Common");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UK_Common_Email");

                    b.HasIndex("FullName")
                        .IsUnique()
                        .HasDatabaseName("UK_Common_FullName");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasDatabaseName("UK_Common_PhoneNumber");

                    b.HasIndex("TaxNumber")
                        .IsUnique()
                        .HasDatabaseName("UK_Common_TaxNumber")
                        .HasFilter("[TaxNumber] IS NOT NULL");

                    b.ToTable("CommonUsers");
                });

            modelBuilder.Entity("Kargo_İlan.Models.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"));

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IlceAdi");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("Enlem");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("Boylam");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("DistrictId")
                        .HasName("PK_Ilceler");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Listing", b =>
                {
                    b.Property<int>("ListingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListingId"));

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Aciklama");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2")
                        .HasColumnName("GuncellemeTarihi");

                    b.Property<int>("ListingStatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Miktar");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("OlusturulmaTarihi")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Baslik");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VarisIlId")
                        .HasColumnType("int");

                    b.Property<int>("VarisIlceId")
                        .HasColumnType("int");

                    b.Property<int>("VarisUlkeId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.Property<int>("YuklemeIlId")
                        .HasColumnType("int");

                    b.Property<int>("YuklemeIlceId")
                        .HasColumnType("int");

                    b.Property<int>("YuklemeUlkeId")
                        .HasColumnType("int");

                    b.HasKey("ListingId");

                    b.HasIndex("CargoId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ListingStatusId");

                    b.HasIndex("VarisIlId");

                    b.HasIndex("VarisIlceId");

                    b.HasIndex("YuklemeIlceId");

                    b.HasIndex(new[] { "VehicleTypeId" }, "IX_Listing_AracTipi");

                    b.HasIndex(new[] { "UserId" }, "IX_Listing_Kullanici");

                    b.HasIndex(new[] { "OlusturulmaTarihi" }, "IX_Listing_OlusturulmaTarihi");

                    b.HasIndex(new[] { "YuklemeIlId", "VarisIlId" }, "IX_Listing_Rota");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("Kargo_İlan.Models.ListingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("IlanDurumu")
                        .HasComment("İlanın durumunu belirtir");

                    b.HasKey("Id")
                        .HasName("PK_IlanDurumlari");

                    b.ToTable("ListingStatuses");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            Name = "Aktif"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Beklemede"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Tamamlandı"
                        },
                        new
                        {
                            Id = 40,
                            Name = "İptal Edildi"
                        });
                });

            modelBuilder.Entity("Kargo_İlan.Models.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinceId"));

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("Enlem");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("Boylam");

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IlAdi");

                    b.HasKey("ProvinceId")
                        .HasName("PK_Iller");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK_Role");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 10,
                            RoleName = "User"
                        },
                        new
                        {
                            RoleId = 20,
                            RoleName = "CompanyUser"
                        },
                        new
                        {
                            RoleId = 30,
                            RoleName = "Company"
                        },
                        new
                        {
                            RoleId = 40,
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("Kargo_İlan.Models.RoleUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK_RoleUser");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleUsers");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("CommonUserId")
                        .HasColumnType("int");

                    b.HasKey("UserId")
                        .HasName("PK_User");

                    b.HasIndex("CommonUserId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Kargo_İlan.Models.VehicleType", b =>
                {
                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleTypeId"));

                    b.Property<string>("VehicleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AracAdi")
                        .HasComment("Araç tipinin adını belirtir");

                    b.HasKey("VehicleTypeId")
                        .HasName("PK_AracTipleri");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            VehicleTypeId = 10,
                            VehicleName = "Kamyonet"
                        },
                        new
                        {
                            VehicleTypeId = 20,
                            VehicleName = "Tır"
                        },
                        new
                        {
                            VehicleTypeId = 30,
                            VehicleName = "Kamyon"
                        },
                        new
                        {
                            VehicleTypeId = 40,
                            VehicleName = "Frigo"
                        },
                        new
                        {
                            VehicleTypeId = 50,
                            VehicleName = "Panelvan"
                        },
                        new
                        {
                            VehicleTypeId = 60,
                            VehicleName = "Minivan"
                        },
                        new
                        {
                            VehicleTypeId = 70,
                            VehicleName = "Açık Kasa Tır"
                        },
                        new
                        {
                            VehicleTypeId = 80,
                            VehicleName = "Kapalı Kasa Kamyon"
                        },
                        new
                        {
                            VehicleTypeId = 90,
                            VehicleName = "Diğer"
                        });
                });

            modelBuilder.Entity("Kargo_İlan.Models.District", b =>
                {
                    b.HasOne("Kargo_İlan.Models.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilceler_Iller");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Listing", b =>
                {
                    b.HasOne("Kargo_İlan.Models.CargoType", "CargoType")
                        .WithMany("Listings")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_KargoTipi");

                    b.HasOne("Kargo_İlan.Models.CategoryType", "CategoryType")
                        .WithMany("Listings")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_Kategori");

                    b.HasOne("Kargo_İlan.Models.ListingStatus", "ListingStatus")
                        .WithMany("Listings")
                        .HasForeignKey("ListingStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_IlanDurumu");

                    b.HasOne("Kargo_İlan.Models.Users", "User")
                        .WithMany("Listings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_Kullanicilar");

                    b.HasOne("Kargo_İlan.Models.Province", "VarisIl")
                        .WithMany("VarisIl")
                        .HasForeignKey("VarisIlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_VarisIli");

                    b.HasOne("Kargo_İlan.Models.District", "VarisIlce")
                        .WithMany("VarisIlce")
                        .HasForeignKey("VarisIlceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_VarisIlcesi");

                    b.HasOne("Kargo_İlan.Models.VehicleType", "VehicleType")
                        .WithMany("Listings")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_AracTipi");

                    b.HasOne("Kargo_İlan.Models.Province", "YuklemeIl")
                        .WithMany("YuklemeIl")
                        .HasForeignKey("YuklemeIlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_YuklemeIli");

                    b.HasOne("Kargo_İlan.Models.District", "YuklemeIlce")
                        .WithMany("YuklemeIlce")
                        .HasForeignKey("YuklemeIlceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_YuklemeIlcesi");

                    b.Navigation("CargoType");

                    b.Navigation("CategoryType");

                    b.Navigation("ListingStatus");

                    b.Navigation("User");

                    b.Navigation("VarisIl");

                    b.Navigation("VarisIlce");

                    b.Navigation("VehicleType");

                    b.Navigation("YuklemeIl");

                    b.Navigation("YuklemeIlce");
                });

            modelBuilder.Entity("Kargo_İlan.Models.RoleUser", b =>
                {
                    b.HasOne("Kargo_İlan.Models.Role", "Role")
                        .WithMany("RoleUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RoleUser_Role");

                    b.HasOne("Kargo_İlan.Models.Users", "User")
                        .WithMany("RoleUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RoleUser_User");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Users", b =>
                {
                    b.HasOne("Kargo_İlan.Models.CommonUser", "Common")
                        .WithOne()
                        .HasForeignKey("Kargo_İlan.Models.Users", "CommonUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_User_Common");

                    b.Navigation("Common");
                });

            modelBuilder.Entity("Kargo_İlan.Models.CargoType", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("Kargo_İlan.Models.CategoryType", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("Kargo_İlan.Models.District", b =>
                {
                    b.Navigation("VarisIlce");

                    b.Navigation("YuklemeIlce");
                });

            modelBuilder.Entity("Kargo_İlan.Models.ListingStatus", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Province", b =>
                {
                    b.Navigation("Districts");

                    b.Navigation("VarisIl");

                    b.Navigation("YuklemeIl");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Role", b =>
                {
                    b.Navigation("RoleUsers");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Users", b =>
                {
                    b.Navigation("Listings");

                    b.Navigation("RoleUsers");
                });

            modelBuilder.Entity("Kargo_İlan.Models.VehicleType", b =>
                {
                    b.Navigation("Listings");
                });
#pragma warning restore 612, 618
        }
    }
}
